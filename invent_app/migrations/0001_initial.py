# Generated by Django 5.0 on 2024-04-19 08:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalBreed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breed', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Animal Breed',
                'verbose_name_plural': 'Animal Breeds',
                'db_table': 'tbl_animal_breed',
            },
        ),
        migrations.CreateModel(
            name='AnimalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animals',
                'db_table': 'tbl_animal_type',
            },
        ),
        migrations.CreateModel(
            name='ConductedByType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conducted_type', models.CharField(max_length=50)),
                ('created_dat', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Conducted By Type',
                'verbose_name_plural': 'Conducted By Types',
                'db_table': 'tbl_conducted_type',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Designation',
                'verbose_name_plural': 'Designations',
                'db_table': 'tbl_designation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.CharField(max_length=100)),
                ('symptoms', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'db_table': 'tbl_disease',
            },
        ),
        migrations.CreateModel(
            name='FeedbackCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('days', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Feedback Category',
                'verbose_name_plural': 'Feedback Categories',
                'db_table': 'tbl_feedback_categories',
            },
        ),
        migrations.CreateModel(
            name='LanguageSopported',
            fields=[
                ('title', models.CharField(max_length=30)),
                ('code', models.CharField(default='en-US', max_length=100, primary_key=True, serialize=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to='language_icons')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'db_table': 'tbl_lang_supported',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('mcc', models.CharField(max_length=100)),
                ('mcc_code', models.CharField(default='EX_CODE', max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'tbl_location',
            },
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Logo',
                'verbose_name_plural': 'Logoes',
                'db_table': 'educart_logo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MCCs',
            fields=[
                ('mcc', models.CharField(max_length=100)),
                ('mcc_code', models.CharField(default='EX_CODE', max_length=20, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'MCC',
                'verbose_name_plural': 'MCCs',
                'db_table': 'tbl_mcc',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Medicine',
                'verbose_name_plural': 'Medicines',
                'db_table': 'tbl_medicines',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('FarmerId', models.IntegerField(blank=True, null=True)),
                ('FarmerCode', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('FullName', models.CharField(max_length=255)),
                ('FatherName', models.CharField(blank=True, max_length=255, null=True)),
                ('EmailAddress', models.EmailField(blank=True, max_length=254, null=True)),
                ('PhoneNumber', models.CharField(max_length=20, null=True)),
                ('PlantID', models.IntegerField(blank=True, null=True)),
                ('PlantCode', models.CharField(blank=True, max_length=20, null=True)),
                ('PlantName', models.CharField(max_length=100)),
                ('MccID', models.IntegerField(blank=True, null=True)),
                ('MccCode', models.CharField(blank=True, max_length=20, null=True)),
                ('MccName', models.CharField(max_length=100)),
                ('MstCenterCode', models.IntegerField()),
                ('BmcName', models.CharField(max_length=100)),
                ('SocietyCode', models.IntegerField(blank=True, null=True)),
                ('SocietyName', models.CharField(max_length=100)),
                ('CompanyId', models.IntegerField(blank=True, null=True)),
                ('AddressLine1', models.CharField(blank=True, max_length=255, null=True)),
                ('AddressLine2', models.CharField(blank=True, max_length=255, null=True)),
                ('City', models.CharField(blank=True, max_length=100, null=True)),
                ('Pincode', models.CharField(blank=True, max_length=20, null=True)),
                ('VillageId', models.IntegerField(blank=True, null=True)),
                ('DistrictId', models.IntegerField(blank=True, null=True)),
                ('DistrictName', models.CharField(max_length=100)),
                ('StateId', models.IntegerField(blank=True, null=True)),
                ('StateName', models.CharField(max_length=100)),
                ('VillageName', models.CharField(max_length=100)),
                ('IsRegistered', models.BooleanField(default=False)),
                ('RegistrationDate', models.DateTimeField(blank=True, null=True)),
                ('OTP', models.CharField(blank=True, max_length=255, null=True)),
                ('EncToken', models.TextField(blank=True, null=True)),
                ('DefaultLanguage', models.IntegerField(blank=True, null=True)),
                ('otpsms', models.TextField(blank=True, null=True)),
                ('opt_status', models.CharField(blank=True, max_length=255, null=True)),
                ('smsurl', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
                'db_table': 'tbl_members',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role', models.CharField(blank=True, max_length=20, null=True)),
                ('role_code', models.CharField(choices=[('sahayak', 'SAHAYAK'), ('gro', 'GRO'), ('hod', 'HOD'), ('member', 'MEMBER'), ('ce', 'CE')], max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Symptoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Symptom',
                'verbose_name_plural': 'Symptoms',
                'db_table': 'tbl_animal_symptoms',
            },
        ),
        migrations.CreateModel(
            name='VCGMemberAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent')], max_length=10)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'VCG Member Attendance',
                'verbose_name_plural': 'VCG Member Attendances',
                'db_table': 'tbl_member_attendance',
            },
        ),
        migrations.CreateModel(
            name='VCGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp_num', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'VCG Group',
                'verbose_name_plural': 'VCG Groups',
                'db_table': 'tbl_vcg_member',
            },
        ),
        migrations.CreateModel(
            name='VMCCs',
            fields=[
                ('mcc', models.CharField(max_length=100)),
                ('mcc_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'VCG MCC',
                'verbose_name_plural': 'VCG MCCs',
                'db_table': 'tbl_vcg_mcc',
            },
        ),
        migrations.CreateModel(
            name='VMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=100)),
                ('max_qty', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
                'db_table': 'tbl_vmembers',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invent_app.department')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invent_app.role')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Animals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=20)),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breed_animals', to='invent_app.animalbreed')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_animals', to='invent_app.member')),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animals',
                'db_table': 'tbl_animals',
            },
        ),
        migrations.AddField(
            model_name='animalbreed',
            name='animal_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breeds', to='invent_app.animaltype'),
        ),
        migrations.CreateModel(
            name='ConductedByName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_dat', models.DateTimeField(auto_now=True)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_by_type', to='invent_app.conductedbytype')),
            ],
            options={
                'verbose_name': 'Conducted By Name',
                'verbose_name_plural': 'Conducted By Names',
                'db_table': 'tbl_conducted_name',
            },
        ),
        migrations.CreateModel(
            name='AnimalTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField()),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animal_treatment', to='invent_app.animals')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments_done', to=settings.AUTH_USER_MODEL)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_treatment', to='invent_app.disease')),
            ],
            options={
                'verbose_name': 'AnimalTreatment',
                'verbose_name_plural': 'AnimalTreatments',
                'db_table': 'tbl_animal_treatments',
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Confirmation',
                'verbose_name_plural': 'Email Confirmations',
                'db_table': 'email_confirmation',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='disease',
            name='medicines',
            field=models.ManyToManyField(to='invent_app.medicine'),
        ),
        migrations.CreateModel(
            name='MPPs',
            fields=[
                ('mpp_loc', models.CharField(max_length=100)),
                ('mpp_loc_code', models.CharField(default='EX_CODE', max_length=20, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('mcc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mpps', to='invent_app.mccs')),
            ],
            options={
                'verbose_name': 'MPP',
                'verbose_name_plural': 'MPPs',
                'db_table': 'tbl_mpp',
            },
        ),
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OTP Token',
                'verbose_name_plural': 'OTP Tokens',
                'db_table': 'otp_token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('age', models.IntegerField(default=0, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=200, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('desination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invent_app.designation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'db_table': 'user_profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubLocations',
            fields=[
                ('mpp_loc', models.CharField(max_length=100)),
                ('mpp_loc_code', models.CharField(default='EX_CODE', max_length=20, primary_key=True, serialize=False)),
                ('mcc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invent_app.location')),
            ],
            options={
                'verbose_name': 'Sub Location',
                'verbose_name_plural': 'Sub Locations',
                'db_table': 'tbl_sub_location',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('mobile', models.CharField(blank=True, max_length=50)),
                ('re_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('reopened_at', models.DateTimeField(blank=True, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('feedback_id', models.CharField(blank=True, editable=False, max_length=50, unique=True)),
                ('remark', models.TextField(blank=True, editable=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='feedback_files/')),
                ('receiver_feedback', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('feedback_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invent_app.feedbackcategory')),
                ('sub_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invent_app.sublocations')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FarmerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('mobile', models.CharField(blank=True, max_length=50)),
                ('re_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('reopened_at', models.DateTimeField(blank=True, null=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('feedback_id', models.CharField(blank=True, editable=False, max_length=50, unique=True)),
                ('remark', models.TextField(blank=True, editable=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='feedback_files/')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('receiver_farmer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='farmer_feedbacks_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_farmer_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('mpp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invent_app.sublocations')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VCGMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('conducted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vcg_meeting_conducted', to='invent_app.conductedbyname')),
                ('mpp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mpp_vcg_meetings', to='invent_app.mpps')),
            ],
            options={
                'verbose_name': 'VCG Meeting',
                'verbose_name_plural': 'VCG Meetings',
                'db_table': 'tbl_vcg_meeting',
            },
        ),
        migrations.CreateModel(
            name='VCGMeetingImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='meeting_images')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_images', to='invent_app.vcgmemberattendance')),
            ],
            options={
                'verbose_name': 'VCG Meeting Images',
                'verbose_name_plural': 'VCG Meeting Images',
                'db_table': 'tbl_meeting_images',
            },
        ),
        migrations.AddField(
            model_name='vcgmemberattendance',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vcg_attendance', to='invent_app.vcgroup'),
        ),
        migrations.CreateModel(
            name='Facilitator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mcc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.vmccs')),
            ],
            options={
                'verbose_name': 'Facilitator',
                'verbose_name_plural': 'Facilitators',
                'db_table': 'tbl_facilitators',
            },
        ),
        migrations.AddField(
            model_name='vcgroup',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_group', to='invent_app.vmembers'),
        ),
        migrations.CreateModel(
            name='VMPPs',
            fields=[
                ('mpp_loc', models.CharField(max_length=100)),
                ('mpp_loc_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('district', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mcc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcc_mpps_list', to='invent_app.vmccs')),
            ],
            options={
                'verbose_name': 'VCG MPP',
                'verbose_name_plural': 'VCG MPPs',
                'db_table': 'tbl_vcg_mpp',
            },
        ),
        migrations.AddField(
            model_name='vmembers',
            name='mpp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.vmpps'),
        ),
    ]
