# Generated by Django 5.0 on 2024-05-03 11:54

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('invent_app', '0015_awareness_awarenessimages_awarenessteammembers'),
    ]

    operations = [
        migrations.CreateModel(
            name='CattleCaseStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed')], default='Pending', max_length=20)),
            ],
            options={
                'verbose_name': 'Case Status',
                'verbose_name_plural': 'Case Statuses',
                'db_table': 'tbl_cattle_case_status',
            },
        ),
        migrations.CreateModel(
            name='CattleCaseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_type', models.CharField(choices=[('Normal', 'Normal'), ('Special', 'Special'), ('Operational', 'Operational')], default='Normal', max_length=20)),
            ],
            options={
                'verbose_name': 'Case Type',
                'verbose_name_plural': 'Case Types',
                'db_table': 'tbl_cattle_case_type',
            },
        ),
        migrations.CreateModel(
            name='DiagnosisCattleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_status', models.CharField(choices=[('Milking', 'Milking'), ('Pregnant', 'Pregnant'), ('Dry Cattle', 'Dry Cattle')], max_length=20)),
            ],
            options={
                'verbose_name': 'Diagnosis Cattle Status',
                'verbose_name_plural': 'Diagnosis Cattle Statuses',
                'db_table': 'tbl_diagnosis_status',
            },
        ),
        migrations.CreateModel(
            name='DiagnosisRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Diagnosis Route',
                'verbose_name_plural': 'Diagnosis Routes',
                'db_table': 'tbl_diagnosis_route',
            },
        ),
        migrations.CreateModel(
            name='MedicineCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100, unique=True)),
                ('unit_of_quantity', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'tbl_payment_methods',
            },
        ),
        migrations.CreateModel(
            name='TAGType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'TAG Type',
                'verbose_name_plural': 'TAG Types',
                'db_table': 'tbl_tag_type',
            },
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='animal',
        ),
        migrations.AlterModelOptions(
            name='animalbreed',
            options={'verbose_name': 'Cattle Breed', 'verbose_name_plural': 'Cattle Breeds'},
        ),
        migrations.AlterModelOptions(
            name='animaltreatment',
            options={'verbose_name': 'Animal Treatment', 'verbose_name_plural': 'Animal Treatments'},
        ),
        migrations.AlterModelOptions(
            name='animaltype',
            options={'verbose_name': 'Cattle Type', 'verbose_name_plural': 'Cattle Types'},
        ),
        migrations.AlterModelOptions(
            name='disease',
            options={},
        ),
        migrations.AlterModelOptions(
            name='medicine',
            options={},
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='disease',
        ),
        migrations.RemoveField(
            model_name='animaltreatment',
            name='doctor',
        ),
        migrations.RemoveField(
            model_name='disease',
            name='medicines',
        ),
        migrations.AddField(
            model_name='animaltreatment',
            name='created_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='animaltreatment',
            name='medicine',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.medicine'),
        ),
        migrations.AddField(
            model_name='medicine',
            name='expiary_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='medicine',
            name='recommended_for_disease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recommended_medicines', to='invent_app.disease'),
        ),
        migrations.RemoveField(
            model_name='disease',
            name='symptoms',
        ),
        migrations.AlterModelTable(
            name='disease',
            table=None,
        ),
        migrations.AlterModelTable(
            name='medicine',
            table=None,
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_holder_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=255)),
                ('bank_short_name', models.CharField(max_length=255)),
                ('branch_name', models.CharField(max_length=255)),
                ('IFSC_code', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'tbl_user_bank_account',
            },
        ),
        migrations.CreateModel(
            name='CaseEntry',
            fields=[
                ('address', models.CharField(default='', max_length=255)),
                ('remark', models.TextField(blank=True, null=True)),
                ('advice', models.TextField(blank=True, null=True)),
                ('case_no', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('applied_by_ext', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case_by_ext', to=settings.AUTH_USER_MODEL)),
                ('applied_by_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_cases', to='invent_app.member')),
            ],
            options={
                'verbose_name': 'Case Entry',
                'verbose_name_plural': 'Case Entries',
                'db_table': 'tbl_case_entries',
            },
        ),
        migrations.AddField(
            model_name='animaltreatment',
            name='case_treatment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animal_treatment', to='invent_app.caseentry'),
        ),
        migrations.CreateModel(
            name='CaseReceiverLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transferred_at', models.DateTimeField(auto_now_add=True)),
                ('case_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiver_logs', to='invent_app.caseentry')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Case Receiver Log',
                'verbose_name_plural': 'Case Receiver Logs',
                'db_table': 'tbl_case_reciever_logs',
            },
        ),
        migrations.CreateModel(
            name='Cattle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=20)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=200, null=True)),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breed_animals', to='invent_app.animalbreed')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_animals', to='invent_app.member')),
                ('tag_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_animals', to='invent_app.tagtype')),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animals',
                'db_table': 'tbl_animals',
            },
        ),
        migrations.AddField(
            model_name='caseentry',
            name='animal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cattle_cases', to='invent_app.cattle'),
        ),
        migrations.AddField(
            model_name='caseentry',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.cattlecasestatus'),
        ),
        migrations.CreateModel(
            name='CattleTagging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_number', models.CharField(max_length=20)),
                ('tagging_date', models.DateField()),
                ('cattle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cattle_tagged', to='invent_app.cattle')),
            ],
            options={
                'verbose_name': 'Tagging Report',
                'verbose_name_plural': 'Tagging Reports',
            },
        ),
        migrations.CreateModel(
            name='AnimalDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milk_production', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('disease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.disease')),
                ('case_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_entry_diagnosis', to='invent_app.caseentry')),
                ('case_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.cattlecasetype')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.diagnosiscattlestatus')),
            ],
            options={
                'verbose_name': 'Animal Diagnosis',
                'verbose_name_plural': 'Animal Diagnosis',
                'db_table': 'tbl_animal_diagnosis',
            },
        ),
        migrations.AddField(
            model_name='animaltreatment',
            name='route',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.diagnosisroute'),
        ),
        migrations.CreateModel(
            name='DiagnosisSymptoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosis_symptoms', to='invent_app.animaldiagnosis')),
                ('symptom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='invent_app.symptoms')),
            ],
            options={
                'verbose_name': 'Animal Diagnosis',
                'verbose_name_plural': 'Animal Diagnosis',
                'db_table': 'tbl_animal_diagnosis_symp',
            },
        ),
        migrations.CreateModel(
            name='MedicineStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_medicines', to='invent_app.disease')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invent_app.medicine')),
            ],
            options={
                'verbose_name': 'Medicine',
                'verbose_name_plural': 'Medicines',
                'db_table': 'tbl_medicines',
            },
        ),
        migrations.CreateModel(
            name='DoctorMedicineStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_quantity', models.PositiveIntegerField(default=0)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicine_stocks', to=settings.AUTH_USER_MODEL)),
                ('medicine_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invent_app.medicinestock')),
            ],
            options={
                'verbose_name': 'Doctor Medicine Stock',
                'verbose_name_plural': 'Doctor Medicine Stocks',
                'db_table': 'tbl_medicine_stock',
            },
        ),
        migrations.CreateModel(
            name='OnlinePayment',
            fields=[
                ('payment_method', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='online_payment', serialize=False, to='invent_app.paymentmethod')),
                ('gateway_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Online Payment Method',
                'verbose_name_plural': 'Online Payment Methods',
                'db_table': 'tbl_online_payment_methods',
            },
        ),
        migrations.CreateModel(
            name='CasePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('case_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='invent_app.caseentry')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invent_app.paymentmethod')),
            ],
            options={
                'verbose_name': 'Case Payment',
                'verbose_name_plural': 'Case Payments',
                'db_table': 'tbl_case_payments',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('case_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invent_app.cattlecasetype')),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'db_table': 'tbl_time_slot',
            },
        ),
        migrations.CreateModel(
            name='TravelRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('from_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('to_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('to_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('distance_travelled', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('case_entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='travel_records', to='invent_app.caseentry')),
            ],
            options={
                'verbose_name': 'Travel Record',
                'verbose_name_plural': 'Travel Records',
            },
        ),
        migrations.DeleteModel(
            name='Animals',
        ),
        migrations.AddField(
            model_name='disease',
            name='symptoms',
            field=models.ManyToManyField(related_name='symptom_disease', to='invent_app.symptoms'),
        ),
    ]
